#sources:
# * https://github.com/geerlingguy/ansible-role-composer/blob/master/.travis.yml
#
---
sudo: required

env:
  - distribution: centos
    version: 7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    http_port_uchiwa: 3000

#services:
#  - docker
#
#before_install:
#  # Pull container
#  - 'sudo docker pull ${distribution}:${version}'
#  # Customize container
#  - 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'
#
script:
  - sudo apt-get install ansible -y
  - ansible-galaxy install -r /etc/ansible/roles/role_under_test/tests/requirements.yml
#  - container_id=$(mktemp)
#  # Run container in detached state
#  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"'
#
#  # Install dependencies.
#  - 'sudo docker exec "$(cat ${container_id})" ansible-galaxy install -r /etc/ansible/roles/role_under_test/tests/requirements.yml'
#
#  # Ansible syntax check.
#  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'
#
#  # Test role.
#  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'
#
#  # Test role idempotence.
#  - >
#    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
#    | grep -q 'changed=0.*failed=0'
#    && (echo 'Idempotence test: pass' && exit 0)
#    || (echo 'Idempotence test: fail' && exit 1)

  # Make sure uchiwa is running.
  #- 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm curl http://localhost:$http_port_uchiwa'
  
#after_failure:
#  # Check what happened via journalctl
#  #- 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm journalctl -xe'
#  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=sudo ls /var/log/sensu'
#  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=sudo cat /var/log/sensu/sensu-client.log'
#  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=sudo systemctl status sensu-client.service -l'
#  

#  # Clean up
#  - 'sudo docker stop "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
