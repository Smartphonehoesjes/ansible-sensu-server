---
sudo: required

env:
  - distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""
    SITE: package
    DOCKER_VERSION: "1.9.1-0~trusty"
  - distribution: centos
    version: 7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    SITE: package
#  - distribution: ubuntu
#    version: 16.04
#    init: /usr/lib/systemd/systemd
#    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
#    SITE: package

services:
  - docker

before_install:
  # Downgrade to older version of Docker engine.
  - sudo apt-get update
  - sudo apt-get remove docker-engine -yq
  - sudo apt-get install docker-engine=$DOCKER_VERSION -yq --no-install-suggests --no-install-recommends --force-yes -o Dpkg::Options::="--force-confnew"
 
  # Pull container
  - 'sudo docker pull ${distribution}:${version}'
  # Customize container
  - 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'

script:
  - container_id=$(mktemp)
  # Run container in detached state
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"'

  # Install dependencies.
  - 'sudo docker exec "$(cat ${container_id})" ansible-galaxy install -r /etc/ansible/roles/role_under_test/tests/requirements.yml'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test-${SITE}.yml --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test-${SITE}.yml'

  # Test role idempotence.
  - >
    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test-${SITE}.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Debug idempotence
  - sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test-${SITE}.yml

  # Ensure Git is installed and at the right version.
  #- 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm sudo systemctl status sensu-client.service -l'
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ls /etc/init.d'
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ss -nat | grep 80'
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ss -nat | grep 2003'
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ss -nat | grep 2004'
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ss -nat | grep 3000'
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ss -nat | grep 3030'
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ss -nat | grep 4567'
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ss -nat | grep 6379'

  # Clean up
  - 'sudo docker stop "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
